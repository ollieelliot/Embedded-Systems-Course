#include "my_library.c"

uint64_t time = 0;

char char_array[10000];
char char_array2[10000];
short fastMode = 0;

/* Days per month */
int mday[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

struct date currentDate;
struct date time_elapsed;

void seconds(uint64_t t){
  if((t/1000) == 0)
    time_elapsed.second++;
}

void set_date(void){
    //time = 0; 
    printf("Seconds before: %d \n", time_elapsed.second);
    
    time_elapsed.second+= currentDate.second + currentDate.minute*60 + currentDate.hour*60*60 +currentDate.day*60*60*24;
    
    
    //time_elapsed.month = 2;
    //time_elapsed.year = 2021;
    
    time_to_date();
    
    printf("Day: %d \n", time_elapsed.day);
    printf("Month: %d \n", time_elapsed.month);
    printf("Year: %d \n", time_elapsed.year);
    
    printf("Seconds: %d \n", time_elapsed.second);
}




struct date time_to_date(void){
    
    
    //time_elapsed.minute = (time_elapsed.second)%60;
    //time_elapsed.hour = time_elapsed.second%(60*60);
    //time_elapsed.day = time_elapsed.second/(60*60*24);
    
   
    
    /* Check for new month */ 
    if(time_elapsed.day >= mday[time_elapsed.day] && time_elapsed.hour == 23 && time_elapsed.minute == 59 && time_elapsed.second == 59){
 
      time = time - (time_elapsed.day * 1000*60*60*24);
      time_elapsed.month++;
      printf("Month: %d \n", time_elapsed.month);
      
        
    }
    
    return time_elapsed;
}


/* Convert unsigned int to char in order to print*/
    
char *uint_to_char(uint64_t num){
    sprintf(char_array, "%llu", num);
    return char_array;
}

char *int_to_char(int num){
    sprintf(char_array2, "%d", num);
    return char_array2;
}

int string_to_int(char num[]){
    return atoi(num);
}

struct date get_date(char input[]){
    
    int date;

    date = string_to_int(input);

    currentDate.day = date/1000000;
    currentDate.month = (date/10000)%100;
    currentDate.year = date%10000;
    
    /*
    printf("Day: %d \n", currentDate.day);
    printf("Month: %d \n", currentDate.month);
    printf("Year: %d \n", currentDate.year);
    */
    
    return currentDate;
    
}

struct date get_time(char input[]){
    
    int t;

    t = string_to_int(input);

    currentDate.second = t%100;
    currentDate.minute = (t/100)%100;
    currentDate.hour = t/10000;
    
  
    
    return currentDate;
    
}






  